# 책 상세 페이지 모바일 UI 개선 PRD

## 프로젝트 개요
책 상세 페이지의 메모 허브 UI를 모바일에서만 두 번째 스크린샷과 같은 깔끔한 아웃라인으로 개선하되, 데스크톱 화면과 메모카드 디자인은 100% 현행 유지

## 현재 상황 분석
- 첫 번째 스크린샷: 현재 모바일 UI 상태 (개선 필요)
- 두 번째 스크린샷: 목표 UI 상태 (깔끔한 아웃라인)
- 메모카드 자체 디자인은 현행 유지하면서 전체 컨테이너 아웃라인만 개선

## 기술적 요구사항

### 반응형 구현
- 모든 변경사항은 모바일에서만 적용 (max-sm: 접두사 사용)
- sm: 이상 화면에서는 기존 스타일 완전 유지
- TSNoteCard 컴포넌트의 개별 디자인은 수정하지 않음

### UI 개선 범위
1. 상단 책 제목 영역 시각적 강조 개선
2. 메모 허브 섹션 아웃라인 개선
3. 탭 구조 시각적 개선
4. 전체적인 시각적 일관성 보완

### 발생 가능한 오류 진단 및 극복 계획

#### 1. CSS 우선순위 충돌
**위험도: 높음**
- 기존 스타일과 새로운 모바일 스타일 간 충돌
- 극복 방안: 반응형 접두사 우선순위 확인, 명시적 !important 사용 금지

#### 2. 반응형 브레이크포인트 혼란
**위험도: 중간**
- sm:, md:, lg: 브레이크포인트 혼동으로 인한 잘못된 적용
- 극복 방안: Tailwind 브레이크포인트 정확히 확인, 테스트 환경 구축

#### 3. 메모카드 디자인 의도치 않은 변경
**위험도: 높음**
- TSNoteCard 내부 스타일 변경으로 인한 메모카드 디자인 변경
- 극복 방안: TSNoteCard 컴포넌트는 건드리지 않고 부모 컨테이너만 수정

#### 4. 기존 기능 손상
**위험도: 중간**
- 탭 전환, 메모 진화 등 기존 기능 손상
- 극복 방안: 기능 테스트 체크리스트 작성, 단계별 검증

#### 5. 크로스브라우저 호환성
**위험도: 낮음**
- 다양한 모바일 브라우저에서 스타일 차이
- 극복 방안: 주요 브라우저 테스트, 안전한 CSS 속성 사용

#### 6. 성능 영향
**위험도: 낮음**
- 추가 CSS로 인한 성능 저하
- 극복 방안: 기존 클래스 최대한 활용, 새로운 클래스 최소화

## 구현 범위

### Phase 1: 환경 설정 및 사전 준비
- 개발 환경 설정
- 현재 코드 구조 분석
- 테스트 환경 구축

### Phase 2: 상단 책 제목 영역 개선
- 모바일에서 책 제목 영역의 시각적 강조 개선
- 배경색과 테두리를 활용한 아웃라인 효과 추가
- 반응형 적용 및 테스트

### Phase 3: 메모 허브 섹션 아웃라인 개선
- 메모 허브 영역의 배경과 테두리 스타일 개선
- 카드 형태의 더 명확한 아웃라인 적용
- 그림자 효과 추가로 깊이감 향상

### Phase 4: 탭 구조 시각적 개선
- 탭 버튼의 모바일 최적화 스타일 적용
- 활성/비활성 탭의 시각적 차이 강화
- 테두리와 배경색 개선

### Phase 5: 전체적인 시각적 일관성 보완
- 모바일에서 전체적인 색상 조화 확인
- 여백과 패딩 최적화
- 시각적 계층 구조 개선

### Phase 6: 테스트 및 검증
- 모바일 다양한 화면 크기에서 테스트
- 기존 기능 정상 동작 확인
- 크로스브라우저 테스트
- 성능 영향 측정

## 성공 기준
1. 모바일에서 두 번째 스크린샷과 같은 깔끔한 아웃라인 구현
2. 데스크톱 화면 100% 현행 유지
3. 메모카드 디자인 100% 현행 유지
4. 기존 기능 모두 정상 동작
5. 성능 저하 없음

## 비기능적 요구사항
- 코드 가독성 유지
- 유지보수성 고려
- 접근성 기준 준수
- 브라우저 호환성 확보

## 위험 관리 계획
1. 각 단계별 테스트 체크포인트 설정
2. 롤백 계획 수립
3. 백업 브랜치 생성
4. 점진적 배포 전략

## 주요 파일
- frontend/app/books/[id]/page.tsx (메인 수정 대상)
- frontend/components/ts/TSNoteCard.tsx (수정 금지, 분석용)
- frontend/styles/globals.css (필요시 보조 스타일) 