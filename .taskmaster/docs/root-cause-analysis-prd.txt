# 인라인 메모 스레드 중복 API 호출 문제 근본 원인 분석 및 해결

## 프로젝트 개요
사용자가 새로고침 시 인라인 메모 스레드 기능에서 중복 API 호출이 발생하는 문제를 근본적으로 해결하기 위한 체계적 분석 및 솔루션 구현

## 문제 상황
1. 새로고침 시 인라인 스레드 생성 API가 2번 호출됨
2. 기존 해결책(중복 방지 시스템)이 효과적이지 않음
3. React Strict Mode와 관련된 useEffect 이중 실행 문제 의심

## 웹 검색 결과 분석
### 주요 원인들
1. **React 18 Strict Mode**: 개발 모드에서 의도적으로 컴포넌트를 마운트-언마운트-재마운트하여 useEffect가 2번 실행됨
2. **useEffect 이중 실행**: 빈 dependency array []를 가진 useEffect도 Strict Mode에서 2번 실행됨
3. **비동기 처리 문제**: 컴포넌트 언마운트 후에도 API 호출이 완료되어 상태 업데이트 시도

### 모범사례 해결책들
1. **AbortController 사용**: API 호출 중단 메커니즘
2. **useRef 플래그**: 첫 번째 렌더링 체크
3. **Custom Hook**: useMountEffect 같은 전용 훅 사용
4. **React Query**: 캐싱 기반 데이터 페칭 라이브러리
5. **Promise 캐싱**: 동일한 요청에 대한 Promise 재사용

## 기술적 요구사항
1. React 18 Strict Mode 환경에서 안정적 동작
2. 새로고침 시 중복 API 호출 완전 차단
3. 기존 기능 무손실 유지
4. 성능 최적화 (불필요한 네트워크 요청 제거)
5. 개발/프로덕션 환경 모두에서 동일한 동작

## 구현 범위
### Phase 1: 근본 원인 정확한 진단
- 현재 TSNoteCard 컴포넌트의 useEffect 분석
- Strict Mode 영향 확인
- 네트워크 요청 패턴 분석

### Phase 2: 최적 해결책 선택 및 구현
- 여러 해결책 중 프로젝트에 가장 적합한 방법 선택
- 선택된 해결책 구현
- 철저한 테스트

### Phase 3: 검증 및 최적화
- 새로고침 시나리오 테스트
- 성능 영향 측정
- 코드 리뷰 및 문서화

## 성공 기준
1. 새로고침 시 API 호출이 정확히 1번만 발생
2. 기존 인라인 스레드 CRUD 기능 정상 동작
3. 개발자 도구에서 중복 네트워크 요청 없음
4. 사용자 경험 개선 (로딩 시간 단축)

## 비기능적 요구사항
- 코드 가독성 유지
- 유지보수성 고려
- 향후 React 버전 호환성
- 다른 컴포넌트에 적용 가능한 재사용 가능한 패턴 